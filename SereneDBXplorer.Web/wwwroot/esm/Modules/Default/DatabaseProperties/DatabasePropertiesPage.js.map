{
  "version": 3,
  "sources": ["../../../../../Modules/Default/DatabaseProperties/DatabasePropertiesPage.ts", "../../../../../Modules/Default/DatabaseProperties/DatabasePropertiesGrid.ts", "../../../../../Modules/ServerTypes/Default/DatabasePropertiesColumns.ts", "../../../../../Modules/ServerTypes/Default/DatabasePropertiesForm.ts", "../../../../../Modules/ServerTypes/Default/DatabasePropertiesRow.ts", "../../../../../Modules/ServerTypes/Default/DatabasePropertiesService.ts", "../../../../../Modules/Default/DatabaseProperties/DatabasePropertiesDialog.ts"],
  "sourcesContent": ["\uFEFFimport { initFullHeightGridPage } from '@serenity-is/corelib/q';\r\nimport { DatabasePropertiesGrid } from './DatabasePropertiesGrid';\r\n\r\n$(function() {\r\n    initFullHeightGridPage(new DatabasePropertiesGrid($('#GridDiv')).element);\r\n});", "\uFEFFimport { Decorators, EntityGrid } from '@serenity-is/corelib';\r\nimport { DatabasePropertiesColumns, DatabasePropertiesRow, DatabasePropertiesService } from '../../ServerTypes/Default';\r\nimport { DatabasePropertiesDialog } from './DatabasePropertiesDialog';\r\n\r\n@Decorators.registerClass('SereneDBXplorer.Default.DatabasePropertiesGrid')\r\nexport class DatabasePropertiesGrid extends EntityGrid<DatabasePropertiesRow, any> {\r\n    protected getColumnsKey() { return DatabasePropertiesColumns.columnsKey; }\r\n    protected getDialogType() { return DatabasePropertiesDialog; }\r\n    protected getIdProperty() { return DatabasePropertiesRow.idProperty; }\r\n    protected getInsertPermission() { return DatabasePropertiesRow.insertPermission; }\r\n    protected getLocalTextPrefix() { return DatabasePropertiesRow.localTextPrefix; }\r\n    protected getService() { return DatabasePropertiesService.baseUrl; }\r\n\r\n    constructor(container: JQuery) {\r\n        super(container);\r\n    }\r\n}", "\uFEFFexport class DatabasePropertiesColumns {\r\n    static columnsKey = 'Default.DatabaseProperties';\r\n}", "\uFEFFimport { StringEditor, DateEditor, BooleanEditor, PrefixedContext } from \"@serenity-is/corelib\";\nimport { initFormType } from \"@serenity-is/corelib/q\";\n\nexport interface DatabasePropertiesForm {\n    DatabaseName: StringEditor;\n    HostName: StringEditor;\n    CreationDate: DateEditor;\n    DbType: StringEditor;\n    IsWindowsAuth: BooleanEditor;\n    Username: StringEditor;\n    PasswordHash: StringEditor;\n    PasswordSalt: StringEditor;\n    IsActive: BooleanEditor;\n}\n\nexport class DatabasePropertiesForm extends PrefixedContext {\n    static formKey = 'Default.DatabaseProperties';\n    private static init: boolean;\n\n    constructor(prefix: string) {\n        super(prefix);\n\n        if (!DatabasePropertiesForm.init)  {\n            DatabasePropertiesForm.init = true;\n\n            var w0 = StringEditor;\n            var w1 = DateEditor;\n            var w2 = BooleanEditor;\n\n            initFormType(DatabasePropertiesForm, [\n                'DatabaseName', w0,\n                'HostName', w0,\n                'CreationDate', w1,\n                'DbType', w0,\n                'IsWindowsAuth', w2,\n                'Username', w0,\n                'PasswordHash', w0,\n                'PasswordSalt', w0,\n                'IsActive', w2\n            ]);\n        }\n    }\n}\n", "\uFEFFimport { fieldsProxy } from \"@serenity-is/corelib/q\";\n\nexport interface DatabasePropertiesRow {\n    DatabasePropertyId?: number;\n    DatabaseName?: string;\n    HostName?: string;\n    CreationDate?: string;\n    DbType?: string;\n    IsWindowsAuth?: boolean;\n    Username?: string;\n    PasswordHash?: string;\n    PasswordSalt?: string;\n    IsActive?: boolean;\n}\n\nexport abstract class DatabasePropertiesRow {\n    static readonly idProperty = 'DatabasePropertyId';\n    static readonly nameProperty = 'DatabaseName';\n    static readonly localTextPrefix = 'Default.DatabaseProperties';\n    static readonly deletePermission = 'Administration:General';\n    static readonly insertPermission = 'Administration:General';\n    static readonly readPermission = 'Administration:General';\n    static readonly updatePermission = 'Administration:General';\n\n    static readonly Fields = fieldsProxy<DatabasePropertiesRow>();\n}\n", "\uFEFFimport { SaveRequest, SaveResponse, DeleteRequest, DeleteResponse, RetrieveRequest, RetrieveResponse, ListRequest, ListResponse } from \"@serenity-is/corelib\";\nimport { DatabasePropertiesRow } from \"./DatabasePropertiesRow\";\nimport { ServiceOptions, serviceRequest } from \"@serenity-is/corelib/q\";\n\nexport namespace DatabasePropertiesService {\n    export const baseUrl = 'Default/DatabaseProperties';\n\n    export declare function Create(request: SaveRequest<DatabasePropertiesRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Update(request: SaveRequest<DatabasePropertiesRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Delete(request: DeleteRequest, onSuccess?: (response: DeleteResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Retrieve(request: RetrieveRequest, onSuccess?: (response: RetrieveResponse<DatabasePropertiesRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function List(request: ListRequest, onSuccess?: (response: ListResponse<DatabasePropertiesRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\n\n    export const Methods = {\n        Create: \"Default/DatabaseProperties/Create\",\n        Update: \"Default/DatabaseProperties/Update\",\n        Delete: \"Default/DatabaseProperties/Delete\",\n        Retrieve: \"Default/DatabaseProperties/Retrieve\",\n        List: \"Default/DatabaseProperties/List\"\n    } as const;\n\n    [\n        'Create', \n        'Update', \n        'Delete', \n        'Retrieve', \n        'List'\n    ].forEach(x => {\n        (<any>DatabasePropertiesService)[x] = function (r, s, o) {\n            return serviceRequest(baseUrl + '/' + x, r, s, o);\n        };\n    });\n}\n", "\uFEFFimport { Decorators, EntityDialog } from '@serenity-is/corelib';\r\nimport { DatabasePropertiesForm, DatabasePropertiesRow, DatabasePropertiesService } from '../../ServerTypes/Default';\r\n\r\n@Decorators.registerClass('SereneDBXplorer.Default.DatabasePropertiesDialog')\r\nexport class DatabasePropertiesDialog extends EntityDialog<DatabasePropertiesRow, any> {\r\n    protected getFormKey() { return DatabasePropertiesForm.formKey; }\r\n    protected getIdProperty() { return DatabasePropertiesRow.idProperty; }\r\n    protected getLocalTextPrefix() { return DatabasePropertiesRow.localTextPrefix; }\r\n    protected getNameProperty() { return DatabasePropertiesRow.nameProperty; }\r\n    protected getService() { return DatabasePropertiesService.baseUrl; }\r\n    protected getDeletePermission() { return DatabasePropertiesRow.deletePermission; }\r\n    protected getInsertPermission() { return DatabasePropertiesRow.insertPermission; }\r\n    protected getUpdatePermission() { return DatabasePropertiesRow.updatePermission; }\r\n\r\n    protected form = new DatabasePropertiesForm(this.idPrefix);\r\n}"],
  "mappings": "mFAAC,IAAAA,EAAuC,SCAvC,IAAAC,EAAuC,SCAhC,IAAMC,EAAN,KAAgC,CAExC,EAFcC,EAAAD,EAAA,6BAAAA,EACH,WAAa,6BCDvB,IAAAE,EAAyE,SAC1EC,EAA6B,SActB,IAAMC,EAAN,cAAqC,iBAAgB,CAIxD,YAAYC,EAAgB,CAGxB,GAFA,MAAMA,CAAM,EAER,CAACD,EAAuB,KAAO,CAC/BA,EAAuB,KAAO,GAE9B,IAAIE,EAAK,eACLC,EAAK,aACLC,EAAK,mBAET,gBAAaJ,EAAwB,CACjC,eAAgBE,EAChB,WAAYA,EACZ,eAAgBC,EAChB,SAAUD,EACV,gBAAiBE,EACjB,WAAYF,EACZ,eAAgBA,EAChB,eAAgBA,EAChB,WAAYE,CAChB,CAAC,CACL,CACJ,CACJ,EA3BaC,EAANL,EAAMM,EAAAD,EAAA,0BAAAA,EACF,QAAU,6BChBpB,IAAAE,EAA4B,SAetB,IAAeC,EAAf,KAAqC,CAU5C,EAVsBC,EAAAD,EAAA,yBAAAA,EACF,WAAa,qBADXA,EAEF,aAAe,eAFbA,EAGF,gBAAkB,6BAHhBA,EAIF,iBAAmB,yBAJjBA,EAKF,iBAAmB,yBALjBA,EAMF,eAAiB,yBANfA,EAOF,iBAAmB,yBAPjBA,EASF,UAAS,eAAmC,ECtBhE,IAAAE,EAA+C,SAE9BC,OACAA,EAAA,QAAU,6BAQVA,EAAA,QAAU,CACnB,OAAQ,oCACR,OAAQ,oCACR,OAAQ,oCACR,SAAU,sCACV,KAAM,iCACV,EAEA,CACI,SACA,SACA,SACA,WACA,MACJ,EAAE,QAAQC,GAAK,CACLD,EAA2BC,CAAC,EAAI,SAAUC,EAAGC,EAAGC,EAAG,CACrD,SAAO,kBAAeJ,EAAA,QAAU,IAAMC,EAAGC,EAAGC,EAAGC,CAAC,CACpD,CACJ,CAAC,IA3BYJ,MAAA,KCJhB,IAAAK,EAAyC,SAInC,IAAMC,EAAN,cAAuC,cAAyC,CAAhF,kCAUH,KAAU,KAAO,IAAIC,EAAuB,KAAK,QAAQ,EAT/C,YAAa,CAAE,OAAOA,EAAuB,OAAS,CACtD,eAAgB,CAAE,OAAOC,EAAsB,UAAY,CAC3D,oBAAqB,CAAE,OAAOA,EAAsB,eAAiB,CACrE,iBAAkB,CAAE,OAAOA,EAAsB,YAAc,CAC/D,YAAa,CAAE,OAAOC,EAA0B,OAAS,CACzD,qBAAsB,CAAE,OAAOD,EAAsB,gBAAkB,CACvE,qBAAsB,CAAE,OAAOA,EAAsB,gBAAkB,CACvE,qBAAsB,CAAE,OAAOA,EAAsB,gBAAkB,CAGrF,EAXaE,EAAAJ,EAAA,4BAAAA,EAANK,EAAA,CADN,aAAW,cAAc,kDAAkD,GAC/DL,GLCN,IAAMM,EAAN,cAAqC,YAAuC,CACrE,eAAgB,CAAE,OAAOC,EAA0B,UAAY,CAC/D,eAAgB,CAAE,OAAOC,CAA0B,CACnD,eAAgB,CAAE,OAAOC,EAAsB,UAAY,CAC3D,qBAAsB,CAAE,OAAOA,EAAsB,gBAAkB,CACvE,oBAAqB,CAAE,OAAOA,EAAsB,eAAiB,CACrE,YAAa,CAAE,OAAOC,EAA0B,OAAS,CAEnE,YAAYC,EAAmB,CAC3B,MAAMA,CAAS,CACnB,CACJ,EAXaC,EAAAN,EAAA,0BAAAA,EAANO,EAAA,CADN,aAAW,cAAc,gDAAgD,GAC7DP,GDFb,EAAE,UAAW,IACT,0BAAuB,IAAIQ,EAAuB,EAAE,UAAU,CAAC,EAAE,OAAO,CAC5E,CAAC",
  "names": ["import_q", "import_corelib", "DatabasePropertiesColumns", "__name", "import_corelib", "import_q", "_DatabasePropertiesForm", "prefix", "w0", "w1", "w2", "DatabasePropertiesForm", "__name", "import_q", "DatabasePropertiesRow", "__name", "import_q", "DatabasePropertiesService", "x", "r", "s", "o", "import_corelib", "DatabasePropertiesDialog", "DatabasePropertiesForm", "DatabasePropertiesRow", "DatabasePropertiesService", "__name", "__decorateClass", "DatabasePropertiesGrid", "DatabasePropertiesColumns", "DatabasePropertiesDialog", "DatabasePropertiesRow", "DatabasePropertiesService", "container", "__name", "__decorateClass", "DatabasePropertiesGrid"]
}
